// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'github_repos_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

GitHubReposModel _$GitHubReposModelFromJson(Map<String, dynamic> json) =>
    GitHubReposModel(
      json['id'] as int,
      json['node_id'] as String,
      json['name'] as String,
      json['full_name'] as String,
      json['private'] as bool,
      OwnerModel.fromJson(json['owner'] as Map<String, dynamic>),
      json['html_url'] as String,
      json['description'] as String,
      json['fork'] as bool,
      json['url'] as String,
      json['forks_url'] as String,
      json['keys_url'] as String,
      json['collaborators_url'] as String,
      json['teams_url'] as String,
      json['hooks_url'] as String,
      json['issue_events_url'] as String,
      json['events_url'] as String,
      json['assignees_url'] as String,
      json['branches_url'] as String,
      json['tags_url'] as String,
      json['blobs_url'] as String,
      json['git_tags_url'] as String,
      json['git_refs_url'] as String,
      json['trees_url'] as String,
      json['statuses_url'] as String,
      json['languages_url'] as String,
      json['stargazers_url'] as String,
      json['contributors_url'] as String,
      json['subscribers_url'] as String,
      json['subscription_url'] as String,
      json['commits_url'] as String,
      json['git_commits_url'] as String,
      json['comments_url'] as String,
      json['issue_comment_url'] as String,
      json['contents_url'] as String,
      json['compare_url'] as String,
      json['merges_url'] as String,
      json['archive_url'] as String,
      json['downloads_url'] as String,
      json['issues_url'] as String,
      json['pulls_url'] as String,
      json['milestones_url'] as String,
      json['notifications_url'] as String,
      json['labels_url'] as String,
      json['releases_url'] as String,
      json['deployments_url'] as String,
      json['created_at'] as String,
      json['updated_at'] as String,
      json['pushed_at'] as String,
      json['git_url'] as String,
      json['ssh_url'] as String,
      json['clone_url'] as String,
      json['svn_url'] as String,
      json['homepage'] as String,
      json['size'] as int,
      json['stargazers_count'] as int,
      json['watchers_count'] as int,
      json['language'] as String,
      json['has_issues'] as bool,
      json['has_projects'] as bool,
      json['has_downloads'] as bool,
      json['has_wiki'] as bool,
      json['has_pages'] as bool,
      json['forks_count'] as int,
      json['mirror_url'] as String,
      json['archived'] as bool,
      json['disabled'] as bool,
      json['open_issues_count'] as int,
      json['license'] == null
          ? null
          : LicenseModel.fromJson(json['license'] as Map<String, dynamic>),
      json['allow_forking'] as bool,
      json['is_template'] as bool,
      json['visibility'] as String,
      json['forks'] as int,
      json['open_issues'] as int,
      json['watchers'] as int,
      json['default_branch'] as String,
    );

Map<String, dynamic> _$GitHubReposModelToJson(GitHubReposModel instance) =>
    <String, dynamic>{
      'id': instance.id,
      'node_id': instance.node_id,
      'name': instance.name,
      'full_name': instance.full_name,
      'private': instance.private,
      'owner': instance.owner,
      'html_url': instance.html_url,
      'description': instance.description,
      'fork': instance.fork,
      'url': instance.url,
      'forks_url': instance.forks_url,
      'keys_url': instance.keys_url,
      'collaborators_url': instance.collaborators_url,
      'teams_url': instance.teams_url,
      'hooks_url': instance.hooks_url,
      'issue_events_url': instance.issue_events_url,
      'events_url': instance.events_url,
      'assignees_url': instance.assignees_url,
      'branches_url': instance.branches_url,
      'tags_url': instance.tags_url,
      'blobs_url': instance.blobs_url,
      'git_tags_url': instance.git_tags_url,
      'git_refs_url': instance.git_refs_url,
      'trees_url': instance.trees_url,
      'statuses_url': instance.statuses_url,
      'languages_url': instance.languages_url,
      'stargazers_url': instance.stargazers_url,
      'contributors_url': instance.contributors_url,
      'subscribers_url': instance.subscribers_url,
      'subscription_url': instance.subscription_url,
      'commits_url': instance.commits_url,
      'git_commits_url': instance.git_commits_url,
      'comments_url': instance.comments_url,
      'issue_comment_url': instance.issue_comment_url,
      'contents_url': instance.contents_url,
      'compare_url': instance.compare_url,
      'merges_url': instance.merges_url,
      'archive_url': instance.archive_url,
      'downloads_url': instance.downloads_url,
      'issues_url': instance.issues_url,
      'pulls_url': instance.pulls_url,
      'milestones_url': instance.milestones_url,
      'notifications_url': instance.notifications_url,
      'labels_url': instance.labels_url,
      'releases_url': instance.releases_url,
      'deployments_url': instance.deployments_url,
      'created_at': instance.created_at,
      'updated_at': instance.updated_at,
      'pushed_at': instance.pushed_at,
      'git_url': instance.git_url,
      'ssh_url': instance.ssh_url,
      'clone_url': instance.clone_url,
      'svn_url': instance.svn_url,
      'homepage': instance.homepage,
      'size': instance.size,
      'stargazers_count': instance.stargazers_count,
      'watchers_count': instance.watchers_count,
      'language': instance.language,
      'has_issues': instance.has_issues,
      'has_projects': instance.has_projects,
      'has_downloads': instance.has_downloads,
      'has_wiki': instance.has_wiki,
      'has_pages': instance.has_pages,
      'forks_count': instance.forks_count,
      'mirror_url': instance.mirror_url,
      'archived': instance.archived,
      'disabled': instance.disabled,
      'open_issues_count': instance.open_issues_count,
      'license': instance.license,
      'allow_forking': instance.allow_forking,
      'is_template': instance.is_template,
      'visibility': instance.visibility,
      'forks': instance.forks,
      'open_issues': instance.open_issues,
      'watchers': instance.watchers,
      'default_branch': instance.default_branch,
    };

OwnerModel _$OwnerModelFromJson(Map<String, dynamic> json) => OwnerModel(
      json['login'] as String,
      json['id'] as int,
      json['node_id'] as String,
      json['avatar_url'] as String,
      json['gravatar_id'] as String,
      json['url'] as String,
      json['html_url'] as String,
      json['followers_url'] as String,
      json['following_url'] as String,
      json['gists_url'] as String,
      json['starred_url'] as String,
      json['subscriptions_url'] as String,
      json['organizations_url'] as String,
      json['repos_url'] as String,
      json['events_url'] as String,
      json['received_events_url'] as String,
      json['type'] as String,
      json['site_admin'] as bool,
    );

Map<String, dynamic> _$OwnerModelToJson(OwnerModel instance) =>
    <String, dynamic>{
      'login': instance.login,
      'id': instance.id,
      'node_id': instance.node_id,
      'avatar_url': instance.avatar_url,
      'gravatar_id': instance.gravatar_id,
      'url': instance.url,
      'html_url': instance.html_url,
      'followers_url': instance.followers_url,
      'following_url': instance.following_url,
      'gists_url': instance.gists_url,
      'starred_url': instance.starred_url,
      'subscriptions_url': instance.subscriptions_url,
      'organizations_url': instance.organizations_url,
      'repos_url': instance.repos_url,
      'events_url': instance.events_url,
      'received_events_url': instance.received_events_url,
      'type': instance.type,
      'site_admin': instance.site_admin,
    };

LicenseModel _$LicenseModelFromJson(Map<String, dynamic> json) => LicenseModel(
      json['key'] as String,
      json['name'] as String,
      json['spdx_id'] as String,
      json['url'] as String,
      json['node_id'] as String,
    );

Map<String, dynamic> _$LicenseModelToJson(LicenseModel instance) =>
    <String, dynamic>{
      'key': instance.key,
      'name': instance.name,
      'spdx_id': instance.spdx_id,
      'url': instance.url,
      'node_id': instance.node_id,
    };
